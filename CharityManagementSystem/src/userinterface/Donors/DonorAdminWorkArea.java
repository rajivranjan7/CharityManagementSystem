/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.Donors;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Role.DonorCSRSupervisorRole;
import Business.Role.DonorIndividualRole;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DonorRegistrationRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nanditasharma
 */
public class DonorAdminWorkArea extends javax.swing.JPanel {

    private static JPanel container;
    private static EcoSystem system;
    private static Network network;
    private static Enterprise enterprise;
    private static UserAccount account;
    /**
     * Creates new form DonorAdminWorkArea
     */
    public DonorAdminWorkArea(JPanel container, EcoSystem system, Network network, Enterprise enterprise, UserAccount account) {
        initComponents();

        this.container = container;
        this.system = system;
        this.network = network;
        this.enterprise = enterprise;
        this.account = account;
        populateOrganizationTable();
        populateOrganizationTypes();
        populateTable();
    }
    
    private void populateOrganizationTable() {
        DefaultTableModel model = (DefaultTableModel) tblOrganizationList.getModel();
        
        model.setRowCount(0);
            for(Organization org : enterprise.getOrganizationDirectory().getOrganizationList()){
                Object[] row = new Object[1];
                row[0] = org.getName();
                model.addRow(row);
            }
            
        
    }

    public void populateOrganizationTypes() {
        comboBoxOrgType.removeAllItems();
        comboBoxOrgType.addItem(Organization.Type.DonorCSR);
        comboBoxOrgType.addItem(Organization.Type.DonorIndividual);
    }
    
    private void populateWorkRequestTable() {
        DefaultTableModel model = (DefaultTableModel) tblWorkQueue.getModel();
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if(enterprise.getEnterpriseType() == Enterprise.EnterpriseType.DonorDirectory){
                        for(WorkRequest wr : enterprise.getWorkQueue().getWorkRequestList()){
                            if(wr instanceof DonorRegistrationRequest){
                                Object[] row = new Object[8];
                                row[0] = wr;
                                row[1] = formatter.format(wr.getRequestDate());
                                row[2] = ((DonorRegistrationRequest) wr).getName();
                                row[3] = ((DonorRegistrationRequest) wr).getOrgType();
                                row[4] = ((DonorRegistrationRequest) wr).getUserAddress();
                                row[5] = ((DonorRegistrationRequest) wr).getUserContact();
                                row[6] = ((DonorRegistrationRequest) wr).getUserEmailId();
                                row[7] = wr.getStatus();

                                model.addRow(row);
                            } 
                            
                        }
                      
                }
                
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrganizationList = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboBoxOrgType = new javax.swing.JComboBox();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnAddOrganization = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblDonarName = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblWorkQueue = new javax.swing.JTable();
        btnProcess = new javax.swing.JButton();
        btnAssign = new javax.swing.JButton();

        tblOrganizationList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Organization Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrganizationList);

        jLabel1.setText("Organization List");

        jLabel2.setText("Organization Type");

        comboBoxOrgType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Name");

        btnAddOrganization.setText("Add Organization");
        btnAddOrganization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOrganizationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(267, 267, 267)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(54, 54, 54)
                                        .addComponent(comboBoxOrgType, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(62, 62, 62)
                                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(btnAddOrganization)))
                        .addGap(0, 178, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboBoxOrgType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(53, 53, 53)
                .addComponent(btnAddOrganization)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manage Organization", jPanel1);

        lblDonarName.setFont(new java.awt.Font("Marker Felt", 1, 36)); // NOI18N
        lblDonarName.setText("Welcome Donor Admin");

        tblWorkQueue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Request #", "Request Date", "Requestor Name", "Organization Type", "Address", "Contact", "Email Address", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblWorkQueue);
        if (tblWorkQueue.getColumnModel().getColumnCount() > 0) {
            tblWorkQueue.getColumnModel().getColumn(0).setMinWidth(0);
            tblWorkQueue.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblWorkQueue.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        btnAssign.setText("Assign to me ");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAssign)
                .addGap(39, 39, 39)
                .addComponent(btnProcess)
                .addGap(306, 306, 306))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addComponent(lblDonarName)
                .addContainerGap(268, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(lblDonarName)
                .addGap(55, 55, 55)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProcess)
                    .addComponent(btnAssign))
                .addContainerGap(197, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manage work request", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddOrganizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOrganizationActionPerformed
        // TODO add your handling code here:
        String name = txtName.getText().trim();
        Organization.Type type = (Organization.Type) comboBoxOrgType.getSelectedItem();
        if(!name.isEmpty()){
                Organization org = enterprise.getOrganizationDirectory().createOrganization(type, txtName.getText());
                JOptionPane.showMessageDialog(null, "Organization Successfully Created");
                txtName.setText("");
            
        } else{
            JOptionPane.showMessageDialog(null, "Enter Organization name");
        }
        populateOrganizationTable();
    }//GEN-LAST:event_btnAddOrganizationActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblWorkQueue.getSelectedRow();

        if (selectedRow >= 0) {
            DonorRegistrationRequest request = (DonorRegistrationRequest) tblWorkQueue.getValueAt(selectedRow, 0);
            if (request.getStatus().equalsIgnoreCase("Requested")) {
                JOptionPane.showMessageDialog(null, "Please assign request to yourself and then process it.");
                return;
            }
            else{
                
                if (request.getOrgType() == Organization.Type.DonorCSR) {
                System.out.println("Donor CSR");
                for(Organization org : enterprise.getOrganizationDirectory().getOrganizationList()){
                    if(org.getType() == Organization.Type.DonorCSR){
                        Employee emp = org.getEmployeeDirectory().createEmployee(request.getName());
                        UserAccount ua1 = org.getUserAccountDirectory().createUserAccount(request.getUserName(), request.getUserPassword(), emp, new DonorCSRSupervisorRole());

                    }
                }
                
            } if (request.getOrgType() == Organization.Type.DonorIndividual) {
                System.out.println("Donor Individual");
                for(Organization org : enterprise.getOrganizationDirectory().getOrganizationList()){
                    if(org.getType() == Organization.Type.DonorIndividual){
                        Employee emp = org.getEmployeeDirectory().createEmployee(request.getName());
                        UserAccount ua1 = org.getUserAccountDirectory().createUserAccount(request.getUserName(), request.getUserPassword(), emp, new DonorIndividualRole());

                    }
                }
                
            } 

            request.setStatus("Completed");
            JOptionPane.showMessageDialog(null, "User account has been activated successfully");
            populateTable();
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "Please select a request message to process.");
            return;
        }
        
    }//GEN-LAST:event_btnProcessActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblWorkQueue.getSelectedRow();

        if (selectedRow >= 0) {
            WorkRequest request = (WorkRequest) tblWorkQueue.getValueAt(selectedRow, 0);
            if (request.getStatus().equalsIgnoreCase("Completed")) {
                JOptionPane.showMessageDialog(null, "Request already processed.");
                return;
            }
            else {
                request.setReceiver(account);
                request.setStatus("Pending");
                populateTable();
                JOptionPane.showMessageDialog(null, "Request has successfully assigned");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Choose a request to process.");
            return;
        }
    }//GEN-LAST:event_btnAssignActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddOrganization;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnProcess;
    private javax.swing.JComboBox comboBoxOrgType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblDonarName;
    private javax.swing.JTable tblOrganizationList;
    private javax.swing.JTable tblWorkQueue;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    public void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) tblWorkQueue.getModel();
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");

        model.setRowCount(0);

        if (enterprise.getWorkQueue() == null) {
            enterprise.setWorkQueue(new WorkQueue());
        }
        for (WorkRequest workRequest : enterprise.getWorkQueue().getWorkRequestList()) {

            if (workRequest instanceof DonorRegistrationRequest) {
                Object[] row = new Object[model.getColumnCount()];
                row[0] = workRequest;
                row[1] = formatter.format(((DonorRegistrationRequest) workRequest).getRequestDate());
                row[2] = ((DonorRegistrationRequest) workRequest).getName();
                row[3] = ((DonorRegistrationRequest) workRequest).getOrgType();
                row[4] = ((DonorRegistrationRequest) workRequest).getUserAddress();
                row[5] = ((DonorRegistrationRequest) workRequest).getUserContact();
                row[6] = ((DonorRegistrationRequest) workRequest).getUserEmailId();
                row[7] = ((DonorRegistrationRequest) workRequest).getStatus();

                model.addRow(row);
            }
        }

    }

}
